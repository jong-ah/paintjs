@import 'reset.css';

body {
  background-color: #f6f9fc;
  /* -a만 눌려도 아래 font 자동완성 가능 */
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,
    Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 50px 0px;
}

.canvas {
  width: 700px;
  height: 700px;
  background-color: white;
  border-radius: 15px;
  box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);
}

.controls {
  margin-top: 80px;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.controls .controls__btns {
  margin-bottom: 30px;
}

.controls__btns button {
  /* all:unset은 기본 스타일을 한번에 초기화 시켜버린다. */
  all: unset;
  cursor: pointer;
  background-color: white;
  padding: 5px 0px;
  width: 80px;
  text-align: center;
  border-radius: 5px;
  box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);
  border: 2px solid rgba(0, 0, 0, 0.2);
  color: rgba(0, 0, 0, 0.7);
  text-transform: uppercase;
  font-weight: 800;
  font-size: 12px;
}

.controls__btns button:active {
  transform: scale(0.98);
}

.controls .controls__colors {
  display: flex;
}

.controls__colors .controls__color {
  width: 50px;
  height: 50px;
  border-radius: 25px;
  cursor: pointer;
  box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);
  margin-left: 4px;
}

.controls .controls__range {
  margin-bottom: 30px;
}

.stopdragging {
  -ms-user-select: none;
  -moz-user-select: -moz-none;
  -khtml-user-select: none;
  -webkit-user-select: none;
  user-select: none;
}

/* flaxbox 개념 및 속성 
:: 인터페이스 내의 아이템 간 공간 배분
:: 강력한 정렬 기능
:: 1차원 레이아웃 모델 (행과 열만 다루기 때문)

- row : 기본값, 가로방향, 좌 -> 우
- row-reverse : 가로방향, 우 -> 좌
- column : 세로방향, 상 -> 하
- column-reverse : 세로방향, 하 -> 상

flax-wrap : wrap;
:: 복수행 flax 컨테이너 만들고 싶을 때 넣는다.

=> flex-flow : row wrap; (direction + wrap 속성)

flex 값은 flex-grow > flex-shrink > flex-basis 순으로 결정된다.
:: text1(flex-grow:2), text2, text3(flex-grow:1) -> 2 : 1 : 1
:: flex-grow : 양수로 하면 flex 항복이 넓어질 수 있다.
:: flex-shrink : 양수로 하면 flex 항목이 좁아질 수 있다.
:: flex-basis : flax 항목이 넓어지거나 좁아질때 고려할 기준값이다.
=> flex: 0 1 auto로 모두 쓸 수 있다.
=> flex:initial (0 1 auto) shrink가 있어 공가닝 모자라면 크기가 줄어들고, 그렇지 않으면 지정된 크기만큼 차지한다.
=> flex:auto (1 1 auto) 공간의 여유가 있을 때 여유공간을 다 채운다.
=> flex:none (0 0 auto) 공간 변화에도 항목 크기는 변하지 않는다.

* 참고자료
* [[CSS] flexbox 개념 및 속성 설명(flex-direction / flex-wrap / flex)] (https://dev-syhy.tistory.com/30)
*/
